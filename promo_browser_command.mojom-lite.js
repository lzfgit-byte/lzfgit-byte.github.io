// chrome/browser/promo_browser_command/promo_browser_command.mojom-lite.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2018 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
'use strict';


mojo.internal.exportModule('promoBrowserCommand.mojom');





/**
 * @const { {$: !mojo.internal.MojomType} }
 * @export
 */
promoBrowserCommand.mojom.CommandSpec = { $: mojo.internal.Enum() };

/**
 * @enum {number}
 * @export
 */
promoBrowserCommand.mojom.Command = {
  
  kUnknownCommand: 0,
  kOpenSafetyCheck: 1,
  kOpenSafeBrowsingEnhancedProtectionSettings: 2,
  MIN_VALUE: 0,
  MAX_VALUE: 2,
};





/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 * @export
 */
promoBrowserCommand.mojom.CommandHandlerPendingReceiver = class {
  /**
   * @param {!MojoHandle|!mojo.internal.interfaceSupport.Endpoint} handle
   */
  constructor(handle) {
    /** @public {!mojo.internal.interfaceSupport.Endpoint} */
    this.handle = mojo.internal.interfaceSupport.getEndpointForReceiver(handle);
  }

  /** @param {string=} scope */
  bindInBrowser(scope = 'context') {
    mojo.internal.interfaceSupport.bind(
        this.handle,
        promoBrowserCommand.mojom.CommandHandler.$interfaceName,
        scope);
  }
};



/**
 * @export
 * @implements { promoBrowserCommand.mojom.CommandHandlerInterface }
 */
promoBrowserCommand.mojom.CommandHandlerRemote = class {
  /** @param {MojoHandle|mojo.internal.interfaceSupport.Endpoint=} handle */
  constructor(handle = undefined) {
    /**
     * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!promoBrowserCommand.mojom.CommandHandlerPendingReceiver>}
     */
    this.proxy =
        new mojo.internal.interfaceSupport.InterfaceRemoteBase(
          promoBrowserCommand.mojom.CommandHandlerPendingReceiver,
          handle);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!promoBrowserCommand.mojom.CommandHandlerPendingReceiver>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);

    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
  }

  
  /**
   * @param { !promoBrowserCommand.mojom.Command } commandId
   * @return {!Promise<{
        canShow: !boolean,
   *  }>}
   */

  canShowPromoWithCommand(
      commandId) {
    return this.proxy.sendMessage(
        950451719,
        promoBrowserCommand.mojom.CommandHandler_CanShowPromoWithCommand_ParamsSpec.$,
        promoBrowserCommand.mojom.CommandHandler_CanShowPromoWithCommand_ResponseParamsSpec.$,
        [
          commandId
        ]);
  }

  
  /**
   * @param { !promoBrowserCommand.mojom.Command } commandId
   * @param { !promoBrowserCommand.mojom.ClickInfo } clickInfo
   * @return {!Promise<{
        commandExecuted: !boolean,
   *  }>}
   */

  executeCommand(
      commandId,
      clickInfo) {
    return this.proxy.sendMessage(
        1455125428,
        promoBrowserCommand.mojom.CommandHandler_ExecuteCommand_ParamsSpec.$,
        promoBrowserCommand.mojom.CommandHandler_ExecuteCommand_ResponseParamsSpec.$,
        [
          commandId,
          clickInfo
        ]);
  }
};

/**
 * An object which receives request messages for the CommandHandler
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 *
 * @export
 */
promoBrowserCommand.mojom.CommandHandlerReceiver = class {
  /**
   * @param {!promoBrowserCommand.mojom.CommandHandlerInterface } impl
   */
  constructor(impl) {
    /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!promoBrowserCommand.mojom.CommandHandlerRemote>} */
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
        promoBrowserCommand.mojom.CommandHandlerRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!promoBrowserCommand.mojom.CommandHandlerRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);


    this.helper_internal_.registerHandler(
        950451719,
        promoBrowserCommand.mojom.CommandHandler_CanShowPromoWithCommand_ParamsSpec.$,
        promoBrowserCommand.mojom.CommandHandler_CanShowPromoWithCommand_ResponseParamsSpec.$,
        impl.canShowPromoWithCommand.bind(impl));
    this.helper_internal_.registerHandler(
        1455125428,
        promoBrowserCommand.mojom.CommandHandler_ExecuteCommand_ParamsSpec.$,
        promoBrowserCommand.mojom.CommandHandler_ExecuteCommand_ResponseParamsSpec.$,
        impl.executeCommand.bind(impl));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }
};

/**
 *  @export
 */
promoBrowserCommand.mojom.CommandHandler = class {
  /**
   * @return {!string}
   */
  static get $interfaceName() {
    return "promo_browser_command.mojom.CommandHandler";
  }

  /**
   * Returns a remote for this interface which sends messages to the browser.
   * The browser must have an interface request binder registered for this
   * interface and accessible to the calling document's frame.
   *
   * @return {!promoBrowserCommand.mojom.CommandHandlerRemote}
   * @export
   */
  static getRemote() {
    let remote = new promoBrowserCommand.mojom.CommandHandlerRemote;
    remote.$.bindNewPipeAndPassReceiver().bindInBrowser();
    return remote;
  }
};


/**
 * An object which receives request messages for the CommandHandler
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 *
 * @export
 */
promoBrowserCommand.mojom.CommandHandlerCallbackRouter = class {
  constructor() {
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
      promoBrowserCommand.mojom.CommandHandlerRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!promoBrowserCommand.mojom.CommandHandlerRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);

    this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.canShowPromoWithCommand =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        950451719,
        promoBrowserCommand.mojom.CommandHandler_CanShowPromoWithCommand_ParamsSpec.$,
        promoBrowserCommand.mojom.CommandHandler_CanShowPromoWithCommand_ResponseParamsSpec.$,
        this.canShowPromoWithCommand.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.executeCommand =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1455125428,
        promoBrowserCommand.mojom.CommandHandler_ExecuteCommand_ParamsSpec.$,
        promoBrowserCommand.mojom.CommandHandler_ExecuteCommand_ResponseParamsSpec.$,
        this.executeCommand.createReceiverHandler(true /* expectsResponse */));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }

  /**
   * @param {number} id An ID returned by a prior call to addListener.
   * @return {boolean} True iff the identified listener was found and removed.
   * @export
   */
  removeListener(id) {
    return this.router_.removeListener(id);
  }
};



/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
promoBrowserCommand.mojom.ClickInfoSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
promoBrowserCommand.mojom.CommandHandler_CanShowPromoWithCommand_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
promoBrowserCommand.mojom.CommandHandler_CanShowPromoWithCommand_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
promoBrowserCommand.mojom.CommandHandler_ExecuteCommand_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
promoBrowserCommand.mojom.CommandHandler_ExecuteCommand_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };




mojo.internal.Struct(
    promoBrowserCommand.mojom.ClickInfoSpec.$,
    'ClickInfo',
    [
      mojo.internal.StructField(
        'middleButton', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'altKey', 0,
        1,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'ctrlKey', 0,
        2,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'metaKey', 0,
        3,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'shiftKey', 0,
        4,
        mojo.internal.Bool,
        false,
        false /* nullable */),
    ],
    [[0, 16],]);





/** @record */
promoBrowserCommand.mojom.ClickInfo = class {
  constructor() {
    /** @export { !boolean } */
    this.middleButton;
    /** @export { !boolean } */
    this.altKey;
    /** @export { !boolean } */
    this.ctrlKey;
    /** @export { !boolean } */
    this.metaKey;
    /** @export { !boolean } */
    this.shiftKey;
  }
};




mojo.internal.Struct(
    promoBrowserCommand.mojom.CommandHandler_CanShowPromoWithCommand_ParamsSpec.$,
    'CommandHandler_CanShowPromoWithCommand_Params',
    [
      mojo.internal.StructField(
        'commandId', 0,
        0,
        promoBrowserCommand.mojom.CommandSpec.$,
        0,
        false /* nullable */),
    ],
    [[0, 16],]);





/** @record */
promoBrowserCommand.mojom.CommandHandler_CanShowPromoWithCommand_Params = class {
  constructor() {
    /** @export { !promoBrowserCommand.mojom.Command } */
    this.commandId;
  }
};




mojo.internal.Struct(
    promoBrowserCommand.mojom.CommandHandler_CanShowPromoWithCommand_ResponseParamsSpec.$,
    'CommandHandler_CanShowPromoWithCommand_ResponseParams',
    [
      mojo.internal.StructField(
        'canShow', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
    ],
    [[0, 16],]);





/** @record */
promoBrowserCommand.mojom.CommandHandler_CanShowPromoWithCommand_ResponseParams = class {
  constructor() {
    /** @export { !boolean } */
    this.canShow;
  }
};




mojo.internal.Struct(
    promoBrowserCommand.mojom.CommandHandler_ExecuteCommand_ParamsSpec.$,
    'CommandHandler_ExecuteCommand_Params',
    [
      mojo.internal.StructField(
        'commandId', 0,
        0,
        promoBrowserCommand.mojom.CommandSpec.$,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'clickInfo', 8,
        0,
        promoBrowserCommand.mojom.ClickInfoSpec.$,
        null,
        false /* nullable */),
    ],
    [[0, 24],]);





/** @record */
promoBrowserCommand.mojom.CommandHandler_ExecuteCommand_Params = class {
  constructor() {
    /** @export { !promoBrowserCommand.mojom.Command } */
    this.commandId;
    /** @export { !promoBrowserCommand.mojom.ClickInfo } */
    this.clickInfo;
  }
};




mojo.internal.Struct(
    promoBrowserCommand.mojom.CommandHandler_ExecuteCommand_ResponseParamsSpec.$,
    'CommandHandler_ExecuteCommand_ResponseParams',
    [
      mojo.internal.StructField(
        'commandExecuted', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
    ],
    [[0, 16],]);





/** @record */
promoBrowserCommand.mojom.CommandHandler_ExecuteCommand_ResponseParams = class {
  constructor() {
    /** @export { !boolean } */
    this.commandExecuted;
  }
};


